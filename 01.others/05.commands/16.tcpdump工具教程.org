* 参考文档
[[http://blog.csdn.net/hzhsan/article/details/43445787][tcpdump参数及使用详解]]
[[http://www.cnblogs.com/ggjucheng/archive/2012/01/14/2322659.html][Linux tcpdump命令详解]]
*  tcpdump的选项介绍
   -a 　　　将网络地址和广播地址转变成名字；
   -d 　　　将匹配信息包的代码以人们能够理解的汇编格式给出；
   -dd 　 　将匹配信息包的代码以C语言程序段的格式给出；
   -ddd 　　将匹配信息包的代码以十进制的形式给出；
   -e 　　　在输出行打印出数据链路层的头部信息，包括源mac和目的mac，以及网络层的协议；
   -f 　　　将外部的Internet地址以数字的形式打印出来；
   -l 　　　使标准输出变为缓冲行形式；
   -n 　　　指定将每个监听到数据包中的域名转换成IP地址后显示，不把网络地址转换成名字；
   -nn：    指定将每个监听到的数据包中的域名转换成IP、端口从应用名称转换成端口号后显示
   -t 　　　在输出的每一行不打印时间戳；
   -v 　　　输出一个稍微详细的信息，例如在ip包中可以包括ttl和服务类型的信息；
   -vv 　 　输出详细的报文信息；
   -c 　　　在收到指定的包的数目后，tcpdump就会停止；
   -F 　　　从指定的文件中读取表达式,忽略其它的表达式；
   -i 　　　指定监听的网络接口；
   -p：     将网卡设置为非混杂模式，不能与host或broadcast一起使用
   -r 　　　从指定的文件中读取包(这些包一般通过-w选项产生)；
   -w 　　　直接将包写入文件中，并不分析和打印出来；
   -s snaplen         snaplen表示从一个包中截取的字节数。0表示包不截断，抓完整的数据包。默认的话 tcpdump 只显示部分数据包,默认68字节。
   -T 　　　将监听到的包直接解释为指定的类型的报文，常见的类型有rpc （远程过程调用）和snmp（简单网络管理协议；）
   -X       告诉tcpdump命令，需要把协议头和包内容都原原本本的显示出来（tcpdump会以16进制和ASCII的形式显示），这在进行协议分析时是绝对的利器。
* 过滤语句介绍
1. 过滤表达式的三种过滤条件
   1. 类型
      host(主机)，net(网路地址)，port(端口),缺省为host
   2. 方向
      src,dst,dst or src, dst and src,缺省为src or dst
   3. 协议
      ether,ip,ip6,arp,rarp,tcp,udp,缺省为监听所有
2.
* 例子
   1. 指定抓取回环网口的包
      tcpdump -i lo
   2. 防止包截断：
      tcpdump -s0
   3. 以数字显示主机及端口
      tcpdump -n
   4. 指定端口，抓取端口为80的数据包
      tcpdump -i enp0s29u1u7 -X -n port 80
   5. 抓取3个数据包
      tcpdump -i enp0s29u1u7 -X -n -c 3
   6. 提取包的每一行的第一个域(时间域)，这种情况下我们就需要-l将默认的全缓冲变为行缓冲了
      sudo tcpdump -i enp0s29u1u7  port 80  -l | awk '{print $1}'
   7. 将原始数据包写到文件中
      tcpdump -i enp0s29u1u7  port 80 -w cp.pcap
   8. 将保存的原始数据包文件，"流量回放"出去
      tcpdump -i enp0s29u1u7  port 80 -r cp.pcap
   9. 显示 源mac,目的mac，以及网络层的协议
      tcpdump -i enp0s29u1u7  port 80 -nn  -e
   10. 指定抓取主机ip为 192.168.42.129的数据包
       tcpdump -i enp0s29u1u7  host 192.168.42.129
   11. 截获主机210.27.48.1 和主机210.27.48.2 或210.27.48.3的通信
       tcpdump host 210.27.48.1 and \(210.27.48.2 or 210.27.48.3 \)
   12.
