/*
* 点的参数
        shape
            record     由横的和竖的矩形组成的图形
	    Mrecord    角是圆的，看例题
	    polygon    多边形
	    plaintext
	    box
	    Mdiamond
	    Msquare
	rankdir       默认时图中的线是从上到下的，值：LR，RL，TB(默认)，BT   
	sides 设置边数
	peripheries 设置多边形的外框的层数
	regular = true可以让多边形是一个规则的多边形
	orientation=15 可以让你的多边形旋转一个角度 如15度
	color
	style
	skew 值-1.0～1.0能让多边形斜切一个角度
	label
	distortion 让图形产生透视效果
	
	decorate      决定每条线的label与所属线的连接值：true,false
	labelfontcolor决定headlabel和taillabel的颜色
	fontcolor     决定label颜色
	headlabel     起始点标签
	taillabel     终点标签
	label         标签
	rank       当图中时间表之类的东西时，我们会需要点能排在一行（列），这时要用到rank，用花括号把rank=same然后把需要并排的点一次输入          

	width   宽
	height  高
	nodesep


	画一个子图 subgraph 

	compound 把一条边连到一个子图的边界上，先输入compound = true,然后就能用lhead和ltail来设置连接的子图了
* 
*
****/
/*
设立一条边时，我们可以制定这条边从起点的那个位置射出和从哪个位置结束。控制符有
"n", "ne","e", "se", "s", "sw", "w" 和"nw"，具体效果见下：
n是北；s是南；w是西；e是东

也可以在record/Mrecord中给点定义一些port，因为record类型中都是一个个格子
*/
/*
Graphviz Example: World Dynamics

    This is a graph from Forrester's book World Dynamics. It originally appeared as an example in the Messinger, Rowe et al paper on the GRAB system. We added "same rank" constraints to force a certain level assignment, to evaluate edge crossing avoidance heuristics. 

*/
digraph world {
size="7,7";
	{rank=same; S8 S24 S1 S35 S30;}
	{rank=same; T8 T24 T1 T35 T30;}
	{rank=same; 43 37 36 10 2;}
	{rank=same; 25 9 38 40 13 17 12 18;}
	{rank=same; 26 42 11 3 33 19 39 14 16;}
	{rank=same; 4 31 34 21 41 28 20;}
	{rank=same; 27 5 22 32 29 15;}
	{rank=same; 6 23;}
	{rank=same; 7;}

	S8 -> 9;
	S24 -> 25;
	S24 -> 27;
	S1 -> 2;
	S1 -> 10;
	S35 -> 43;
	S35 -> 36;
	S30 -> 31;
	S30 -> 33;
	9 -> 42;
	9 -> T1;
	25 -> T1;
	25 -> 26;
	27 -> T24;
	2 -> {3 ; 16 ; 17 ; T1 ; 18}
	10 -> { 11 ; 14 ; T1 ; 13; 12;}
	31 -> T1;
	31 -> 32;
	33 -> T30;
	33 -> 34;
	42 -> 4;
	26 -> 4;
	3 -> 4;
	16 -> 15;
	17 -> 19;
	18 -> 29;
	11 -> 4;
	14 -> 15;
	37 -> {39 ; 41 ; 38 ; 40;}
	13 -> 19;
	12 -> 29;
	43 -> 38;
	43 -> 40;
	36 -> 19;
	32 -> 23;
	34 -> 29;
	39 -> 15;
	41 -> 29;
	38 -> 4;
	40 -> 19;
	4 -> 5;
	19 -> {21 ; 20 ; 28;}
	5 -> {6 ; T35 ; 23;}
	21 -> 22;
	20 -> 15;
	28 -> 29;
	6 -> 7;
	15 -> T1;
	22 -> T35;
	22 -> 23;
	29 -> T30;
	7 -> T8;
	23 -> T24;
	23 -> T1;
}

