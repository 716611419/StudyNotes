* bmp
  BMP（位图格式）是DOS和WindowS兼容计算机系统的标准Windows图像格式。BMP格式支持RGB、索引颜色、灰度和位图颜色模式，但不支持Alpha通道。BMP格式支持1、4、24、32位的RGB位图。
  [[https://baike.baidu.com/item/BMP/35116?fr=aladdin][百度百科 BMP]]
  [[https://www.2cto.com/kf/201310/252434.html][BMP文件格式详解]]
** 位图文件组成
   BMP文件由文件头(字节)、位图信息头(40字节)、颜色信息和图形数据四部分组成
   1. BMP文件头（14字节）
      BMP文件头数据结构含有BMP文件的类型、文件大小和位图起始位置等信息。
      #+begin_src cpp
        typedef struct tagBITMAPFILEHEADER
        {
            unsigned short bfType;//位图文件的类型，必须为BM(1-2字节）
            unsigned bfSize;//位图文件的大小，以字节为单位（3-6字节，低位在前）
            unsigned int bfReserved1;//位图文件保留字，必须为0(7-8字节）
            unsigned short int bfReserved2;//位图文件保留字，必须为0(9-10字节）
            unsigned int bfOffBits;//位图数据的起始位置，以相对于位图（11-14字节，低位在前）
            //文件头的偏移量表示，以字节为单位
        }__attribute__((packed)) BITMAPFILEHEADER;
      #+end_src
   2. 位图信息头（40字节）
      BMP位图信息头数据用于说明位图的尺寸等信息
      #+begin_src cpp
        typedef struct tagBITMAPINFOHEADER{
            DWORD biSize;//本结构所占用字节数（15-18字节）
            LONG biWidth;//位图的宽度，以像素为单位（19-22字节）
            LONG biHeight;//位图的高度，以像素为单位（23-26字节）
            WORD biPlanes;//目标设备的级别，必须为1(27-28字节）
            WORD biBitCount;//颜色深度，每个像素所需的位数，必须是1（双色），（29-30字节）,4(16色），8(256色）16(高彩色)或24（真彩色）之一
            DWORD biCompression;//位图压缩类型，必须是0（不压缩），（31-34字节）
        //1(BI_RLE8压缩类型）或2(BI_RLE4压缩类型）之一
            DWORD biSizeImage;//位图的大小(其中包含了为了补齐行数是4的倍数而添加的空字节)，以字节为单位（35-38字节）
            LONG biXPelsPerMeter;//位图水平分辨率，每米像素数（39-42字节）
            LONG biYPelsPerMeter;//位图垂直分辨率，每米像素数（43-46字节)
            DWORD biClrUsed;//位图实际使用的颜色表中的颜色数（47-50字节）
            DWORD biClrImportant;//位图显示过程中重要的颜色数（51-54字节）
        }__attribute__((packed)) BITMAPINFOHEADER;
      #+end_src
   3. 颜色表
      #+begin_src cpp
        typedef struct tagRGBQUAD{
            BYTE rgbBlue;//蓝色的亮度（值范围为0-255)
            BYTE rgbGreen;//绿色的亮度（值范围为0-255)
            BYTE rgbRed;//红色的亮度（值范围为0-255)
            BYTE rgbReserved;//保留，必须为0
        }__attribute__((packed)) RGBQUAD;
      #+end_src
* jpg
* jpeg
* png
* jpeg
* demo
  + test1
    分离YUV420P像素数据中的Y、U、V分量
    本程序中的函数可以将YUV420P数据中的Y、U、V三个分量分离开来并保存成三个文件
